{
  "title": "Microsoft OneDrive",
  "version": "1.0.5",
  "description": "Integration component that can read and write to Microsoft OneDrive",
  "buildType": "docker",
  "docsUrl": "https://github.com/elasticio/microsoft-onedrive-component",
  "envVars": {
    "OAUTH_CLIENT_ID": {
      "required": true,
      "description": "Your Microsoft Graph OAuth client key"
    },
    "OAUTH_CLIENT_SECRET": {
      "required": true,
      "description": "Your Microsoft Graph OAuth client secret"
    }
  },
  "credentials": {
    "useOAuthClient": true,
    "fields": {
      "oauth2": {
        "label": "Authentication",
        "viewClass": "OAuthFieldView",
        "required": true
      }
    },
    "oauth2": {
      "client_id": "{{OAUTH_CLIENT_ID}}",
      "client_secret": "{{OAUTH_CLIENT_SECRET}}",
      "auth_uri": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "token_uri": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
      "scopes": ["offline_access", "Files.ReadWrite.All"]
    }
  },
  "triggers": {
    "getNewAndUpdatedObjectsPolling": {
      "main": "./lib/triggers/pollingTrigger",
      "title": "Get New And Updated Files Polling",
      "note": "Polling trigger",
      "type": "polling",
      "fields": {
        "driveId": {
          "label": "Drive Identity",
          "required": true,
          "viewClass": "SelectView",
          "model": "getDisks",
          "prompt": "Select a disk"
        },
        "itemId": {
          "label": "Folder path",
          "required": false,
          "viewClass": "SelectView",
          "model": "getFolderPaths",
          "prompt": "Select a folder path"
        },
        "emitBehaviour": {
          "label": "Emit Behaviour",
          "viewClass": "SelectView",
          "required": false,
          "prompt": "Default Emit Individually",
          "model": {
            "emitIndividually": "Emit Individually",
            "fetchAll": "Fetch All"
          }
        },
        "startTime": {
          "label": "Start Time",
          "viewClass": "TextFieldView",
          "required": false,
          "note": "Indicates the beginning time to start polling from, default 1970-01-01T00:00:00.000Z",
          "placeholder": "1970-01-01T00:00:00.000Z"
        },
        "endTime": {
          "label": "End Time",
          "viewClass": "TextFieldView",
          "required": false,
          "note": "If provided, do not fetch records modified after this time (defaults to never)",
          "placeholder": "3000-01-01T00:00:00.000Z"
        },
        "pageSize": {
          "label": "Size Of Polling Page",
          "viewClass": "TextFieldView",
          "required": false,
          "placeholder": "Default: 1000"
        },
        "expandChildren": {
          "label": "Expand Children",
          "viewClass": "CheckBoxView"
        },
        "attachFile": {
          "label": "Enable File Attachments",
          "viewClass": "CheckBoxView"
        }
      }
    }
  },
  "actions": {
    "lookupFile": {
      "title": "Get File",
      "note": "Action to get file by provided path",
      "main": "./lib/actions/getFile.js",
      "fields": {
        "driveId": {
          "label": "Drive Identity",
          "required": true,
          "viewClass": "SelectView",
          "model": "getDisks",
          "prompt": "Select a disk"
        },
        "attachFile": {
          "label": "Enable File Attachments",
          "viewClass": "CheckBoxView"
        }
      },
      "metadata": {
        "in": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "required": true
            }
          }
        },
        "out":"./lib/schemas/file.out.json"
      }
    },
    "deleteItem": {
      "title": "Delete File",
      "note": "Action to delete file by provided path",
      "main": "./lib/actions/deleteItem.js",
      "fields": {
        "driveId": {
          "label": "Drive Identity",
          "required": true,
          "viewClass": "SelectView",
          "model": "getDisks",
          "prompt": "Select a disk"
        }
      },
      "metadata": {
        "in": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "required": true
            }
          }
        },
        "out": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "required": false
            }
          }
        }
      }
    },
    "upsertFile": {
      "title": "Upsert File",
      "note": "Action upserts (create or replace) file by path",
      "main": "./lib/actions/upsertFile.js",
      "fields": {
        "driveId": {
          "label": "Drive Identity",
          "required": true,
          "viewClass": "SelectView",
          "model": "getDisks",
          "prompt": "Select a disk"
        }
      },
      "metadata": {
        "in": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "required": true
            }
          }
        },
        "out":"./lib/schemas/file.out.json"
      }
    },
    "createFolder": {
      "title": "Create Folder",
      "note": "Action creates a new folder by provided path",
      "main": "./lib/actions/createFolder.js",
      "fields": {
        "driveId": {
          "label": "Drive Identity",
          "required": true,
          "viewClass": "SelectView",
          "model": "getDisks",
          "prompt": "Select a disk"
        },
        "conflictBehaviour" : {
          "label": "Conflict Behaviour",
          "required": false,
          "viewClass": "SelectView",
          "model" : {
            "fail" : "Fail",
            "replace": "Replace",
            "rename": "Rename"
          },
          "prompt": "What to do if folder already exist? Default: Fail"
        }
      },
      "metadata": {
        "in": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "required": true
            },
            "path": {
              "type": "string",
              "required": true
            }
          }
        },
        "out":"./lib/schemas/file.out.json"
      }
    }
  }
}
